#!/bin/zsh
## function for functions in /u/epitech_2014/plenar_d/cu
## 
## Made by damien plenard
## Login   <plenar_d@epitech.net>
## 
## Started on  Tue May 25 14:07:58 2010 damien plenard
## Last update Wed Jun 22 13:55:36 2011 Damien Plenard
##

clean()
{
    SEARCH='.'
    if [ ${1} ]
    then
	SEARCH=${1}
    fi
    find ${SEARCH} \( -name "*~" -or -name ".*~" -or -name "\#*" \) -exec rm -fv {} \;
}

# precmd() {
#     RPROMPT="$(prompt_info)"
# if [[ $TERM == "screen" ]]; then
# 	eval "tab_title=$TAB_TITLE_PREFIX$TAB_TITLE_PROMPT"
# 	eval "tab_hardstatus=$TAB_HARDSTATUS_PREFIX$TAB_HARDSTATUS_PROMPT"
# 	screen_set $tab_title $tab_hardstatus
# fi
# }

mcd()
{
  test -e $1 || mkdir $1; cd $1;
}

irssi()
{
    echo test
    if screen -ls | egrep '^[[:space:]]+[^[:space:]]' | awk '{print $1}' | egrep '.irc$'
    then # running
	screen -x irc
    else # not running
	screen -c ~/.screenrc.irc -S irc -t irssi irssi
    fi

}

# if using GNU screen, let the zsh tell screen what the title and hardstatus
# of the tab window should be.
if [[ $TERM == "screen" ]]; then
# use the current user as the prefix of the current tab title (since that's
# fairly important, and I change it fairly often)
    TAB_TITLE_PREFIX=''
# when at the shell prompt, show a truncated version of the current path (with
# standard ~ replacement) as the rest of the title.
    TAB_TITLE_PROMPT='`print -Pn "%~" | sed "s:\([~/][^/]*\)/.*/:\1...:"`'
    
# when running a command, show the title of the command as the rest of the
# title (truncate to drop the path to the command)
    TAB_TITLE_EXEC='$cmd[1]:t'
    
# use the current path (with standard ~ replacement) in square brackets as the
# prefix of the tab window hardstatus.
    TAB_HARDSTATUS_PREFIX='`print -Pn "[%~] "`'
# when at the shell prompt, use the shell name (truncated to remove the path to
# the shell) as the rest of the title
    TAB_HARDSTATUS_PROMPT='$SHELL:t'
# when running a command, show the command name and arguments as the rest of
# the title
    TAB_HARDSTATUS_EXEC='$cmd'
    
# tell GNU screen what the tab window title ($1) and the hardstatus($2) should be
    function screen_set()
    {
#  set the tab window title (%t) for screen
	print -nR $'33k'$1$'33'\\\
 
# set hardstatus of tab window (%h) for screen
	print -nR $'33]0;'$2$'\a'
    }
# called by zsh before executing a command

    function preexec()
    {
	local -a cmd; cmd=(${(z)1}) # the command string
	eval "tab_title=$TAB_TITLE_PREFIX$TAB_TITLE_EXEC"
	eval "tab_hardstatus=$TAB_HARDSTATUS_PREFIX$TAB_HARDSTATUS_EXEC"
	screen_set $tab_title $tab_hardstatus
    }
fi

urlencode()
{
    echo `perl -MURI::Escape -e "print uri_escape('$1');"`;
}

extract()
{
    echo Extracting $1 ...
    if [ -f $1 ] ; then
	case $1 in
            *.tar.bz2) tar xjf $1 ;;
            *.tar.gz) tar xzf $1 ;;
            *.bz2) bunzip2 $1 ;;
            *.rar) rar x $1 ;;
            *.gz) gunzip $1 ;;
            *.tar) tar xf $1 ;;
            *.tbz2) tar xjf $1 ;;
            *.tgz) tar xzf $1 ;;
            *.zip) unzip $1 ;;
            *.Z) uncompress $1 ;;
            *.7z) 7z x $1 ;;
            *) echo "'$1' cannot be extracted via extract()" ;;
	esac
    else
	echo "'$1' is not a valid file"
    fi
}
